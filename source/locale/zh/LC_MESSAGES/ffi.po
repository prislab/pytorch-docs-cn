# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017, Torch Contributors
# This file is distributed under the same license as the PyTorch package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PyTorch master (0.3.0.post4 )\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-01-12 11:13+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.1\n"

#: ../../source/ffi.rst:2
msgid "torch.utils.ffi"
msgstr ""

#: of torch.utils.ffi.create_extension:1
msgid "Creates and configures a cffi.FFI object, that builds PyTorch extension."
msgstr ""

#: of torch.utils.ffi.create_extension
msgid "参数"
msgstr ""

#: of torch.utils.ffi.create_extension:3
msgid "package name. Can be a nested module e.g. ``.ext.my_lib``."
msgstr ""

#: of torch.utils.ffi.create_extension:5
msgid "list of headers, that contain only exported functions"
msgstr ""

#: of torch.utils.ffi.create_extension:8
msgid "list of sources to compile."
msgstr ""

#: of torch.utils.ffi.create_extension:10
msgid "if set to ``False``, no output will be printed (default: True)."
msgstr ""

#: of torch.utils.ffi.create_extension:13
msgid "set to ``True`` to compile with CUDA headers (default: False)"
msgstr ""

#: of torch.utils.ffi.create_extension:16
msgid ""
"set to ``True`` to build in package mode (for modules meant to be "
"installed as pip packages) (default: False)."
msgstr ""

#: of torch.utils.ffi.create_extension:19
msgid ""
"path of the build file. Required when ``package is True``. It's best to "
"use ``__file__`` for this argument."
msgstr ""

#: of torch.utils.ffi.create_extension:22
msgid ""
"additional arguments that are passed to ffi to declare the extension. See"
" `Extension API reference`_ for details."
msgstr ""

